services:
  register-service:
    build:
      context: ./backend/register
      dockerfile: Dockerfile
    ports:
      - 8001:8001
    environment:
      - NODE_ENV=production
    depends_on:
      - db
    volumes:
      - sql:/data
    networks:
      - Transcendance

  login-service:
    build:
      context: ./backend/login
      dockerfile: Dockerfile
    ports:
      - 8002:8002
    environment:
      - NODE_ENV=production
    depends_on:
      - db
    networks:
      - Transcendance
  # Gestion des utilisateurs (profils, avatars, statistiques)
  um-service:
    build:
      context: ./backend/um
      dockerfile: Dockerfile
    ports:
      - 8003:8003
    environment:
      - NODE_ENV=production
    depends_on:
      - db
    networks:
      - Transcendance

  # Partie Game (matchmaking, lancement de parties, websocket pour Pong)
  matchmaking-service:
    build:
      context: ./backend/game/matchmaking
      dockerfile: Dockerfile
    ports:
      - 8004:8004
    environment:
      - NODE_ENV=production
    depends_on:
      - redis
    networks:
      - Transcendance

  # Partie Chat (messagerie temps r√©el)
  game-engine-service:
    build:
      context: ./backend/game/game-engine
      dockerfile: Dockerfile
    ports:
      - 8005:8005
    environment:
      - NODE_ENV=production
    networks:
      - Transcendance

  realtime-service:
    build:
      context: ./backend/game/realtime
      dockerfile: Dockerfile
    ports:
      - 8006:8006
    environment:
      - NODE_ENV=production
    networks:
      - Transcendance
  history-service:
    build:
      context: ./backend/game/history
      dockerfile: Dockerfile
    ports:
      - 8007:8007
    environment:
      - NODE_ENV=production
    depends_on:
      - db
    networks:
      - Transcendance

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 8443:8443
    volumes:
      - ./frontend/public:/usr/src/app/frontend/public
      #- public-volume:/usr/src/app
    environment:
      - NODE_ENV=production
    depends_on:
      - register-service
      - login-service
      - um-service
      - game-engine-service
      - history-service
      - matchmaking-service
      - realtime-service
    networks:
      - Transcendance

  db:
    build:
      context: ./SQL
      dockerfile: Dockerfile
    volumes:
      - sql:/data
    networks:
      - Transcendance

  prometheus:
    build:
      context: ./monitoring/prometheus
      dockerfile: Dockerfile
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - Transcendance

  grafana:
    build:
      context: ./monitoring/grafana
      dockerfile: Dockerfile
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - Transcendance

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6380:6380"
    networks:
      - Transcendance

networks:
  Transcendance:
    driver: bridge

volumes:
  node-modules-front:
  node-modules-back:
  node-volume:
  grafana-data:
  #public-volume:
  sql:
  register-data:
