services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 8080:8080  #Port utilise 
    volumes:
      - node-volume:/usr/src/app/backend/ #Creer le volume pour node
      - sql:/data
    environment:
      - NODE_ENV=production
    depends_on:
      - db
    networks:
      - Transcendance

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 8443:8443
    volumes:
      - ./frontend/public:/usr/src/app/frontend/public
      #- public-volume:/usr/src/app
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - Transcendance
  
  db:
    build:
      context: ./SQL
      dockerfile: Dockerfile
    volumes:
      - sql:/data
    networks:
      - Transcendance
  
  prometheus:
    build:
      context: ./monitoring/prometheus
      dockerfile: Dockerfile
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - Transcendance

  grafana:
    build:
      context: ./monitoring/grafana
      dockerfile: Dockerfile
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - Transcendance

networks:
  Transcendance:
    driver: bridge

volumes:
  node-modules-front:
  node-modules-back:
  node-volume:
  grafana-data:
  #public-volume:
  sql:
