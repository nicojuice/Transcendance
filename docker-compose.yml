services:
  login-service:
    build:
      context: ./backend/login
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    environment:
      - NODE_ENV=production
    depends_on:
      - db
    volumes:
      - sql:/data
    networks:
      - Transcendance
      
  register-service:
    build:
      context: ./backend/register
      dockerfile: Dockerfile
    ports:
      - 8082:8082
    environment:
      - NODE_ENV=production
    depends_on:
      - db
    volumes:
      - sql:/data
    networks:
      - Transcendance

  email-service:
    build:
      context: ./backend/user-management/change-email
      dockerfile: Dockerfile
    ports:
      - 8083:8083
    environment:
      - NODE_ENV=production
    depends_on:
      - db
    volumes:
      - sql:/data
    networks:
      - Transcendance
    
  pass-service:
    build:
      context: ./backend/user-management/change-pass
      dockerfile: Dockerfile
    ports:
      - 8084:8084
    environment:
      - NODE_ENV=production
    depends_on:
      - db
    volumes:
      - sql:/data
    networks:
      - Transcendance
  
  user-service:
    build:
      context: ./backend/user-management/change-user
      dockerfile: Dockerfile
    ports:
      - 8085:8085
    environment:
      - NODE_ENV=production
    depends_on:
      - db
    volumes:
      - sql:/data
    networks:
      - Transcendance
  
  avatar-service:
    build:
      context: ./backend/user-management/add-avatar
      dockerfile: Dockerfile
    ports:
      - 8086:8086
    environment:
      - NODE_ENV=production
    depends_on:
      - db
    volumes:
      - sql:/data
    networks:
      - Transcendance

  add-friends-service:
    build:
      context: ./backend/user-management/add-friends
      dockerfile: Dockerfile
    ports:
      - 8087:8087
    environment:
      - NODE_ENV=production
    depends_on:
      - db
    volumes:
      - sql:/data
    networks:
      - Transcendance

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 8443:8443
    # volumes:
    # ./frontend/public:/usr/src/app/frontend/public
    # - public-volume:/usr/src/app
    environment:
      - NODE_ENV=production
    depends_on:
      - register-service
      - login-service
      - email-service
      - pass-service
      - add-friends-service
    networks:
      - Transcendance

  db:
    build:
      context: ./SQL
      dockerfile: Dockerfile
    volumes:
      - sql:/data
    networks:
      - Transcendance

  # prometheus:
  #   build:
  #     context: ./monitoring/prometheus
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - Transcendance

  # grafana:
  #   build:
  #     context: ./monitoring/grafana
  #     dockerfile: Dockerfile
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - Transcendance

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6380:6380"
    networks:
      - Transcendance

networks:
  Transcendance:
    driver: bridge

volumes:
  node-modules-front:
  node-modules-back:
  node-volume:
  grafana-data:
  public-volume:
  sql:
  register-data:
